# github repository Actions 페이지에 나타낼 이름     
name: CI/CD 

# event trigger
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-22.04
    if: "contains(github.event.head_commit.message, '[build]')"
    steps:

    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin' # https://github.com/actions/setup-java
        
    - name: Change gradlew permissions
      run: chmod +x ./gradlew
  

    ## create application-dev.properties
    - name: make application-dev.properties
      if: contains(github.ref, 'main')
      run: |
        cd ./src/main/resources
        touch ./application-dev.properties
        echo "${{ secrets.PROPERTIES_DEV }}" > ./application-dev.properties
      shell: bash

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew build -x test

    ## docker build & push to develop
    - name: Docker build & push to dev
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/nftfont .
          docker push ${{ secrets.DOCKER_USERNAME }}/nftfont
          docker logout 
    ## deploy to production
    - name: Deploy to dev
      uses: appleboy/ssh-action@master
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
              sudo docker rm -f $(docker ps -a -q)
              docker image prune -f
              docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nftfont
              docker stop nft
              docker rm nft
              docker run -d --name nft -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/nftfont
              docker logout

              
  ## time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash
